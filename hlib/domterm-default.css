/* Optional - user-overridable styling */

div.domterm::selection {
    background: rgba(0,0,100,0.9);
    color: #FFFFFF
}
div[reverse-video]::selection { // FIXME doesn't work
    background: green;
    color: #000
}
/* For some reason selectors like div.domterm::selection don't work */
/* The following works, but needs some tweaking:
div.domterm {--selection-background: blue; --selection-color: #FFF }
div.domterm.markmode {--selection-background: lightblue; --selection-color: #FFF }
div.domterm[reverse-video] {--selection-background: green; --selection-color: #000 }
div::selection { color: var(--selection-color); background-color: var(--selection-background) }
*/

/* "\2936" is "arrow pointing downwards then curving leftward".
It is used to indicate a wrapped line, rather like a hyphen. */
span[breaking="yes"][line="soft"]:before {content: "\2936" "\A"; }
div.domterm {
    /* A light color used for the default background in normal mode,
       or used for default foreground (text) in reverse-video mode.
       This value suggested by Tufte CSS - less harsh than pure white. */
    --main-light-color: #fffff8;
    /* A dark color used for the default foreground (text) in normal mode,
       or used for default background in reverse-video mode. */
    --main-dark-color: black;
}
div.domterm {
    color: black; background-color: #fffff8; /* fallback if var not handled */
    --background-color: var(--main-light-color);
    --foreground-color: var(--main-dark-color);
    background-color: var(--background-color);
    color: var(--foreground-color);
    --spacer-color:  #F0F0F8;
    --input-line-color: #ECECC8;
    --input-span-color: #FFFFD0 /* a pale yellow */;
}
div.domterm[reverse-video] {
    color: #fffff8; background-color: black; /* fallback if var not handled */
    --background-color: var(--main-dark-color);
    --foreground-color: var(--main-light-color);
    background-color: var(--background-color);
    color: var(--foreground-color);
    --spacer-color:  #101040;
    --input-line-color: #505030;
    --input-span-color: #404020;
}
div.domterm-spacer {
  background-image: repeating-linear-gradient(
      45deg,
      var(--spacer-color),
      var(--spacer-color) 5px,
      transparent 5px,
      transparent 15px
  );
}

/* Tufte CSS suggests: Consolas, "Liberation Mono", Menlo, Courier, monospace
   However, the first four in that list cause some vertical spacing issues,
   including background-color not being full-height.
   Check with tests/256-colors.sh. */
div.domterm { --monospace-family: Terminal; }
div.domterm-pre, span.docutils.literal { font-family: var(--monospace-family),monospace }
div.domterm[reverse-video] span[std="prompt"] { background-color: #006000 } /* a dark green */
span.editing[std="input"] { outline: solid 2px greenyellow }
div.domterm-show-info span.editing { font-family: var(--monospace-family) }
div.input-line { background-color: var(--input-line-color) } /* a very pale yellow */
span[std="input"], span.focus-area { background-color: var(--input-span-color) } /* a pale yellow */
span[std="prompt"] { background-color: #E8FFE8 } /* a pale green */
span[std="error"] { color: red; }
span[std="hider"]:hover { background-color: yellow; color: red; cursor: pointer }
div.domterm-show-info {
    /*bottom: 0px;*/
    /*right: 2px;*/
    padding: 1px 4px;
    border: 2px solid blue;
}

div.domterm span[caret="block"][std="caret"], div.domterm span[caret="blinking-block"][std="caret"] {
    color: #fffff8; background-color: black; /* fallback if var not handled */
    background-color: var(--foreground-color); color: var(--background-color);
}
div.domterm {
    --caret-blink-count: 20
}
div.domterm span[caret="underline"][std="caret"], div.domterm span[caret="blinking-underline"][std="caret"] {
    text-decoration: underline
}
div.domterm span[caret="bar"][std="caret"], div.domterm span[caret="blinking-bar"][std="caret"] {
    border-right: 2px solid red; margin-right: -2px
}
div.domterm span.focus-caret span {
    left: -1px;
    width: 2px;
    background-color: purple;
}
div.domterm-active span[caret="blinking-block"][std="caret"],
div.domterm-active span[caret="blinking-bar"][std="caret"],
div.domterm-active span[caret="blinking-underline"][std="caret"] {
    animation: blinking-caret 1.5s steps(1) 0s var(--caret-blink-count);
}
div.domterm-active span[caret="blinking-block"][std="caret"][value],
div.domterm-active span[caret="blinking-bar"][std="caret"][value],
div.domterm-active span[caret="blinking-underline"][std="caret"][value] {
    animation: blinking-caret-lineend 1.5s steps(1) 0s var(--caret-blink-count);
}
span[caret][std="caret"][value]:after {
    content: attr(value);
}
@keyframes blinking-caret {
    0% { }
    30% { border-right: inherit; margin-right: inherit;
          background-color: inherit; color: inherit; text-decoration: inherit }
    100% {}
}
@keyframes blinking-caret-lineend {
    0% { }
    30% { border-right: inherit; margin-right: inherit;
          background-color: var(--input-line-color); color: inherit; text-decoration: inherit }
    100% {}
}
div.domterm a.subtle:not(:hover) { text-decoration: inherit; }
div.domterm a.plain:not(:hover) { color: inherit; text-decoration: inherit; }
div.domterm h2,
div.domterm h3,
div.domterm p,
div.domterm dl {
    margin-top: 0.2ex; margin-bottom: 0.3ex; }
div.domterm h1 {
    margin-top: 0.2ex;
    margin-bottom: 0.4ex; }
/* Below match "main" but not "main only" */
div.domterm div.interaction[buffer="main"] {
    border-bottom:  thick double green }
div.interaction[buffer~="main"] div.command-group {
    border-top: 1px solid #00C00080; margin-top: -1px;
    background-clip: padding-box
}

span.pending { background-color: lightgrey }
span.pending span[std="prompt"] { color: green, background-color: lightgrey }
